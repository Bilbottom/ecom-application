# Run DB migrations before these requests

# testing the API end-to-end

### Health check
GET http://localhost:8080/healthcheck

> {%
    client.test("Server is healthy", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Register a new user
POST http://localhost:8080/api/v1/register
Accept: application/json
Content-Type: application/json

{
  "firstName": "John",
  "lastName": "Doe",
  "email": "valid@email.com",
  "password": "password"
}

> {%
    client.test("User can be registered", function () {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}


### Login
POST http://localhost:8080/api/v1/login
Accept: application/json
Content-Type: application/json

{
  "email": "valid@email.com",
  "password": "password"
}

> {%
    client.global.set("auth_token", response.body.token);
    client.test("User can log in", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Create address
POST http://localhost:8080/api/v1/address
Accept: application/json
Content-Type: application/json
Authorization: {{auth_token}}

{
  "isDefault": true,
  "line1": "123 Main St",
  "city": "London",
  "country": "UK",
  "postcode": "AB12 3CD"
}

> {%
    client.test("Address can be added", function () {
        client.assert(response.status === 201, "Response status is not 201");
    });
%}


### Get addresses for user
GET http://localhost:8080/api/v1/address
Accept: application/json
Authorization: {{auth_token}}

> {%
    client.test("Addresses can be retrieved", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Get default address for user
GET http://localhost:8080/api/v1/address?default=true
Accept: application/json
Authorization: {{auth_token}}

> {%
    client.test("Default address can be retrieved", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Get products
GET http://localhost:8080/api/v1/products
Accept: application/json
Authorization: {{auth_token}}

> {%
    client.test("Products can be retrieved", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}


### Checkout cart
POST http://localhost:8080/api/v1/cart/checkout
Accept: application/json
Content-Type: application/json
Authorization: {{auth_token}}

{
  "items": [
    {
      "productID": 1,
      "quantity": 2
    },
    {
      "productID": 2,
      "quantity": 3
    }
  ]
}

> {%
    client.test("Cart can be checked out", function () {
        client.assert(response.status === 200, "Response status is not 200");
    });
%}
